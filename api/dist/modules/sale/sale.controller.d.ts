import { SaleService } from './sale.service';
import { CreateSaleDto } from './dto/create-sale.dto';
import { UpdateSaleDto } from './dto/update-sale.dto';
import { Request } from 'express';
import { FindAllSaleQueryDto } from './dto/findAll-sale-query.dto';
export declare class SaleController {
    private readonly saleService;
    constructor(saleService: SaleService);
    create(createSaleDto: CreateSaleDto, req: Request): Promise<{
        id: number;
        price: number;
        registerId: number | null;
        modifyId: number | null;
        isDeleted: boolean | null;
        createdAt: Date;
        updatedAt: Date;
        date: Date | null;
        code: string | null;
        codeId: number | null;
        clientId: number;
        dept: number;
        credit: number;
        state: import(".prisma/client").$Enums.SaleState;
        clientName: string | null;
        subscribe_begin_date: Date | null;
        subscribe_generate_day: number | null;
    }>;
    findAll(dto: FindAllSaleQueryDto): Promise<{
        total: number;
        page: number;
        limit: number;
        data: ({
            register: {
                id: number;
                isDeleted: boolean | null;
                createdAt: Date;
                updatedAt: Date;
                name: string;
                username: string;
                password: string;
                phone: string | null;
                roleId: number | null;
                chatId: string | null;
            };
            SaleProduct: ({
                product: {
                    id: number;
                    price: number;
                    registerId: number | null;
                    modifyId: number | null;
                    isDeleted: boolean | null;
                    createdAt: Date;
                    updatedAt: Date;
                    name: string;
                    barcode: string | null;
                    barcodeId: number | null;
                    groupId: number;
                    unitId: number | null;
                    priceIncome: number;
                    reminderFirst: number;
                    type: import(".prisma/client").$Enums.ProductType;
                    countReminder: number;
                    countArrived: number;
                    countSale: number;
                };
            } & {
                id: number;
                saleId: number | null;
                productId: number | null;
                price: number | null;
                count: number | null;
                priceCount: number | null;
                is_subscribe: boolean | null;
                registerId: number | null;
                modifyId: number | null;
                isDeleted: boolean | null;
                createdAt: Date | null;
                updatedAt: Date | null;
            })[];
            client: {
                id: number;
                registerId: number | null;
                modifyId: number | null;
                isDeleted: boolean | null;
                createdAt: Date;
                updatedAt: Date;
                name: string;
                phone: string;
                typeId: number | null;
                inn: string;
                regionId: number | null;
                districtId: number | null;
                address: string | null;
                balance: number;
                description: string | null;
            };
            modifier: {
                id: number;
                isDeleted: boolean | null;
                createdAt: Date;
                updatedAt: Date;
                name: string;
                username: string;
                password: string;
                phone: string | null;
                roleId: number | null;
                chatId: string | null;
            };
        } & {
            id: number;
            price: number;
            registerId: number | null;
            modifyId: number | null;
            isDeleted: boolean | null;
            createdAt: Date;
            updatedAt: Date;
            date: Date | null;
            code: string | null;
            codeId: number | null;
            clientId: number;
            dept: number;
            credit: number;
            state: import(".prisma/client").$Enums.SaleState;
            clientName: string | null;
            subscribe_begin_date: Date | null;
            subscribe_generate_day: number | null;
        })[];
    }>;
    findOne(id: string): Promise<{
        SaleProduct: {
            id: number;
            saleId: number | null;
            productId: number | null;
            price: number | null;
            count: number | null;
            priceCount: number | null;
            is_subscribe: boolean | null;
            registerId: number | null;
            modifyId: number | null;
            isDeleted: boolean | null;
            createdAt: Date | null;
            updatedAt: Date | null;
        }[];
        client: {
            District: {
                id: number;
                name: string | null;
                regionId: number | null;
            };
            Region: {
                id: number;
                name: string | null;
            };
        } & {
            id: number;
            registerId: number | null;
            modifyId: number | null;
            isDeleted: boolean | null;
            createdAt: Date;
            updatedAt: Date;
            name: string;
            phone: string;
            typeId: number | null;
            inn: string;
            regionId: number | null;
            districtId: number | null;
            address: string | null;
            balance: number;
            description: string | null;
        };
    } & {
        id: number;
        price: number;
        registerId: number | null;
        modifyId: number | null;
        isDeleted: boolean | null;
        createdAt: Date;
        updatedAt: Date;
        date: Date | null;
        code: string | null;
        codeId: number | null;
        clientId: number;
        dept: number;
        credit: number;
        state: import(".prisma/client").$Enums.SaleState;
        clientName: string | null;
        subscribe_begin_date: Date | null;
        subscribe_generate_day: number | null;
    }>;
    update(id: string, updateSaleDto: UpdateSaleDto): Promise<{
        id: number;
        price: number;
        registerId: number | null;
        modifyId: number | null;
        isDeleted: boolean | null;
        createdAt: Date;
        updatedAt: Date;
        date: Date | null;
        code: string | null;
        codeId: number | null;
        clientId: number;
        dept: number;
        credit: number;
        state: import(".prisma/client").$Enums.SaleState;
        clientName: string | null;
        subscribe_begin_date: Date | null;
        subscribe_generate_day: number | null;
    }>;
    remove(id: string): Promise<{
        id: number;
        price: number;
        registerId: number | null;
        modifyId: number | null;
        isDeleted: boolean | null;
        createdAt: Date;
        updatedAt: Date;
        date: Date | null;
        code: string | null;
        codeId: number | null;
        clientId: number;
        dept: number;
        credit: number;
        state: import(".prisma/client").$Enums.SaleState;
        clientName: string | null;
        subscribe_begin_date: Date | null;
        subscribe_generate_day: number | null;
    }>;
}
